// *****************************************************************************
//
// This file is part of a MASA library or program.
// Refer to the included end-user license agreement for restrictions.
//
// Copyright (c) 2020 MASA Group
//
// *****************************************************************************

// *****************************************************************************
//
// Warning: This file was generated by soft.generator.go Generator
//
// *****************************************************************************

package ecore

import (
	"github.com/stretchr/testify/assert"
	"reflect"
	"testing"
)

func discardMockEClassifier() {
	_ = assert.Equal
	_ = testing.Coverage
}

// TestMockEClassifierGetClassifierID tests method GetClassifierID
func TestMockEClassifierGetClassifierID(t *testing.T) {
	o := &MockEClassifier{}
	r := 45
	o.On("GetClassifierID").Once().Return(r)
	assert.Equal(t, r, o.GetClassifierID())

	o.On("GetClassifierID").Once().Return(func() int {
		return r
	})
	assert.Equal(t, r, o.GetClassifierID())
	o.AssertExpectations(t)
}

// TestMockEClassifierSetClassifierID tests method SetClassifierID
func TestMockEClassifierSetClassifierID(t *testing.T) {
	o := &MockEClassifier{}
	v := 45
	o.On("SetClassifierID", v).Once()

	o.SetClassifierID(v)
	o.AssertExpectations(t)
}

// TestMockEClassifierGetDefaultValue tests method GetDefaultValue
func TestMockEClassifierGetDefaultValue(t *testing.T) {
	o := &MockEClassifier{}
	r := interface{}(nil)
	o.On("GetDefaultValue").Once().Return(r)
	assert.Equal(t, r, o.GetDefaultValue())

	o.On("GetDefaultValue").Once().Return(func() interface{} {
		return r
	})
	assert.Equal(t, r, o.GetDefaultValue())
	o.AssertExpectations(t)
}

// TestMockEClassifierGetEPackage tests method GetEPackage
func TestMockEClassifierGetEPackage(t *testing.T) {
	o := &MockEClassifier{}
	r := &MockEPackage{}
	o.On("GetEPackage").Once().Return(r)
	assert.Equal(t, r, o.GetEPackage())

	o.On("GetEPackage").Once().Return(func() EPackage {
		return r
	})
	assert.Equal(t, r, o.GetEPackage())
	o.AssertExpectations(t)
}

// TestMockEClassifierGetInstanceClass tests method GetInstanceClass
func TestMockEClassifierGetInstanceClass(t *testing.T) {
	o := &MockEClassifier{}
	r := reflect.Type(nil)
	o.On("GetInstanceClass").Once().Return(r)
	assert.Equal(t, r, o.GetInstanceClass())

	o.On("GetInstanceClass").Once().Return(func() reflect.Type {
		return r
	})
	assert.Equal(t, r, o.GetInstanceClass())
	o.AssertExpectations(t)
}

// TestMockEClassifierSetInstanceClass tests method SetInstanceClass
func TestMockEClassifierSetInstanceClass(t *testing.T) {
	o := &MockEClassifier{}
	v := reflect.Type(nil)
	o.On("SetInstanceClass", v).Once()

	o.SetInstanceClass(v)
	o.AssertExpectations(t)
}
