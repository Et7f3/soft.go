// *****************************************************************************
//
// This file is part of a MASA library or program.
// Refer to the included end-user license agreement for restrictions.
//
// Copyright (c) 2020 MASA Group
//
// *****************************************************************************

// *****************************************************************************
//
// Warning: This file was generated by soft.generator.go Generator
//
// *****************************************************************************

package ecore

import (
	"github.com/stretchr/testify/assert"
	"testing"
)

func discardMockEModelElement() {
	_ = assert.Equal
	_ = testing.Coverage
}

// TestMockEModelElementGetEAnnotations tests method GetEAnnotations
func TestMockEModelElementGetEAnnotations(t *testing.T) {
	o := &MockEModelElement{}
	l := &MockEList{}
	// return a value
	o.On("GetEAnnotations").Once().Return(l)
	o.On("GetEAnnotations").Once().Return(func() EList {
		return l
	})
	assert.Equal(t, l, o.GetEAnnotations())
	assert.Equal(t, l, o.GetEAnnotations())
	o.AssertExpectations(t)
}

// TestMockEModelElementGetEAnnotation tests method GetEAnnotation
func TestMockEModelElementGetEAnnotation(t *testing.T) {
	o := &MockEModelElement{}
	source := "Test String"
	r := &MockEAnnotation{}
	o.On("GetEAnnotation", source).Return(r).Once()
	o.On("GetEAnnotation", source).Return(func() EAnnotation {
		return r
	}).Once()
	assert.Equal(t, r, o.GetEAnnotation(source))
	assert.Equal(t, r, o.GetEAnnotation(source))
	o.AssertExpectations(t)
}
