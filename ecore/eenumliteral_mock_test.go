// *****************************************************************************
//
// This file is part of a MASA library or program.
// Refer to the included end-user license agreement for restrictions.
//
// Copyright (c) 2020 MASA Group
//
// *****************************************************************************

// *****************************************************************************
//
// Warning: This file was generated by soft.generator.go Generator
//
// *****************************************************************************

package ecore

import (
	"github.com/stretchr/testify/assert"
	"testing"
)

func discardMockEEnumLiteral() {
	_ = assert.Equal
	_ = testing.Coverage
}

// TestMockEEnumLiteralGetEEnum tests method GetEEnum
func TestMockEEnumLiteralGetEEnum(t *testing.T) {
	o := &MockEEnumLiteral{}
	r := &MockEEnum{}
	o.On("GetEEnum").Once().Return(r)
	o.On("GetEEnum").Once().Return(func() EEnum {
		return r
	})
	assert.Equal(t, r, o.GetEEnum())
	assert.Equal(t, r, o.GetEEnum())
	o.AssertExpectations(t)
}

// TestMockEEnumLiteralGetInstance tests method GetInstance
func TestMockEEnumLiteralGetInstance(t *testing.T) {
	o := &MockEEnumLiteral{}
	r := interface{}(nil)
	o.On("GetInstance").Once().Return(r)
	o.On("GetInstance").Once().Return(func() interface{} {
		return r
	})
	assert.Equal(t, r, o.GetInstance())
	assert.Equal(t, r, o.GetInstance())
	o.AssertExpectations(t)
}

// TestMockEEnumLiteralSetInstance tests method SetInstance
func TestMockEEnumLiteralSetInstance(t *testing.T) {
	o := &MockEEnumLiteral{}
	v := interface{}(nil)
	o.On("SetInstance", v).Once()
	o.SetInstance(v)
	o.AssertExpectations(t)
}

// TestMockEEnumLiteralGetLiteral tests method GetLiteral
func TestMockEEnumLiteralGetLiteral(t *testing.T) {
	o := &MockEEnumLiteral{}
	r := "Test String"
	o.On("GetLiteral").Once().Return(r)
	o.On("GetLiteral").Once().Return(func() string {
		return r
	})
	assert.Equal(t, r, o.GetLiteral())
	assert.Equal(t, r, o.GetLiteral())
	o.AssertExpectations(t)
}

// TestMockEEnumLiteralSetLiteral tests method SetLiteral
func TestMockEEnumLiteralSetLiteral(t *testing.T) {
	o := &MockEEnumLiteral{}
	v := "Test String"
	o.On("SetLiteral", v).Once()
	o.SetLiteral(v)
	o.AssertExpectations(t)
}

// TestMockEEnumLiteralGetValue tests method GetValue
func TestMockEEnumLiteralGetValue(t *testing.T) {
	o := &MockEEnumLiteral{}
	r := 45
	o.On("GetValue").Once().Return(r)
	o.On("GetValue").Once().Return(func() int {
		return r
	})
	assert.Equal(t, r, o.GetValue())
	assert.Equal(t, r, o.GetValue())
	o.AssertExpectations(t)
}

// TestMockEEnumLiteralSetValue tests method SetValue
func TestMockEEnumLiteralSetValue(t *testing.T) {
	o := &MockEEnumLiteral{}
	v := 45
	o.On("SetValue", v).Once()
	o.SetValue(v)
	o.AssertExpectations(t)
}
