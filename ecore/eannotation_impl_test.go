// *****************************************************************************
//
// This file is part of a MASA library or program.
// Refer to the included end-user license agreement for restrictions.
//
// Copyright (c) 2020 MASA Group
//
// *****************************************************************************

// *****************************************************************************
//
// Warning: This file was generated by soft.generator.go Generator
//
// *****************************************************************************

package ecore

import (
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/mock"
	"testing"
)

func discardEAnnotation() {
	_ = assert.Equal
	_ = mock.Anything
	_ = testing.Coverage
}

func TestEAnnotationSourceGet(t *testing.T) {
	v := "Test String"
	obj := newEAnnotationImpl()
	obj.SetSource(v)
	assert.Equal(t, v, obj.GetSource())
}

func TestEAnnotationSourceSet(t *testing.T) {
	obj := newEAnnotationImpl()
	v := "Test String"
	mockAdapter := &MockEAdapter{}
	mockAdapter.On("SetTarget", obj).Once()
	mockAdapter.On("NotifyChanged", mock.Anything).Once()
	obj.EAdapters().Add(mockAdapter)
	obj.SetSource(v)
	mockAdapter.AssertExpectations(t)
}

func TestEAnnotationDetailsGetList(t *testing.T) {
	o := newEAnnotationImpl()
	assert.NotNil(t, o.GetDetails())
}

func TestEAnnotationContentsGetList(t *testing.T) {
	o := newEAnnotationImpl()
	assert.NotNil(t, o.GetContents())
}

func TestEAnnotationReferencesGetList(t *testing.T) {
	o := newEAnnotationImpl()
	assert.NotNil(t, o.GetReferences())
}
