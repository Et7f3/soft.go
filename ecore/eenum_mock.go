// *****************************************************************************
//
// This file is part of a MASA library or program.
// Refer to the included end-user license agreement for restrictions.
//
// Copyright (c) 2020 MASA Group
//
// *****************************************************************************

// *****************************************************************************
//
// Warning: This file was generated by soft.generator.go Generator
//
// *****************************************************************************

package ecore

type MockEEnum struct {
	MockEDataType
}

// GetELiterals get the value of eLiterals
func (eEnum *MockEEnum) GetELiterals() EList {
	ret := eEnum.Called()

	var r EList
	if rf, ok := ret.Get(0).(func() EList); ok {
		r = rf()
	} else {
		if ret.Get(0) != nil {
			r = ret.Get(0).(EList)
		}
	}

	return r
}

// GetEEnumLiteralByName provides mock implementation
func (eEnum *MockEEnum) GetEEnumLiteralByName(name string) EEnumLiteral {
	ret := eEnum.Called(name)

	var r EEnumLiteral
	if rf, ok := ret.Get(0).(func() EEnumLiteral); ok {
		r = rf()
	} else {
		if ret.Get(0) != nil {
			r = ret.Get(0).(EEnumLiteral)
		}
	}

	return r
}

// GetEEnumLiteralByValue provides mock implementation
func (eEnum *MockEEnum) GetEEnumLiteralByValue(value int) EEnumLiteral {
	ret := eEnum.Called(value)

	var r EEnumLiteral
	if rf, ok := ret.Get(0).(func() EEnumLiteral); ok {
		r = rf()
	} else {
		if ret.Get(0) != nil {
			r = ret.Get(0).(EEnumLiteral)
		}
	}

	return r
}

// GetEEnumLiteralByLiteral provides mock implementation
func (eEnum *MockEEnum) GetEEnumLiteralByLiteral(literal string) EEnumLiteral {
	ret := eEnum.Called(literal)

	var r EEnumLiteral
	if rf, ok := ret.Get(0).(func() EEnumLiteral); ok {
		r = rf()
	} else {
		if ret.Get(0) != nil {
			r = ret.Get(0).(EEnumLiteral)
		}
	}

	return r
}
