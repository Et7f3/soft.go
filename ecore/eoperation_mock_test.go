// *****************************************************************************
//
// This file is part of a MASA library or program.
// Refer to the included end-user license agreement for restrictions.
//
// Copyright (c) 2020 MASA Group
//
// *****************************************************************************

// *****************************************************************************
//
// Warning: This file was generated by soft.generator.go Generator
//
// *****************************************************************************

package ecore

import (
	"github.com/stretchr/testify/assert"
	"testing"
)

func discardMockEOperation() {
	_ = assert.Equal
	_ = testing.Coverage
}

// TestMockEOperationGetEContainingClass tests method GetEContainingClass
func TestMockEOperationGetEContainingClass(t *testing.T) {
	o := &MockEOperation{}
	r := &MockEClass{}
	o.On("GetEContainingClass").Once().Return(r)
	assert.Equal(t, r, o.GetEContainingClass())

	o.On("GetEContainingClass").Once().Return(func() EClass {
		return r
	})
	assert.Equal(t, r, o.GetEContainingClass())
	o.AssertExpectations(t)
}

// TestGetEExceptions tests method GetEExceptions
func TestGetEExceptions(t *testing.T) {
	o := &MockEOperation{}
	l := &MockEList{}
	o.On("GetEExceptions").Once().Return(l)
	assert.Equal(t, l, o.GetEExceptions())

	o.On("GetEExceptions").Once().Return(func() EList {
		return l
	})
	assert.Equal(t, l, o.GetEExceptions())
	o.AssertExpectations(t)
}

// TestMockEOperationUnsetEExceptions tests method UnsetEExceptions
func TestMockEOperationUnsetEExceptions(t *testing.T) {
	o := &MockEOperation{}
	o.On("UnsetEExceptions").Once()

	o.UnsetEExceptions()
	o.AssertExpectations(t)
}

// TestGetEParameters tests method GetEParameters
func TestGetEParameters(t *testing.T) {
	o := &MockEOperation{}
	l := &MockEList{}
	o.On("GetEParameters").Once().Return(l)
	assert.Equal(t, l, o.GetEParameters())

	o.On("GetEParameters").Once().Return(func() EList {
		return l
	})
	assert.Equal(t, l, o.GetEParameters())
	o.AssertExpectations(t)
}

// TestMockEOperationGetOperationID tests method GetOperationID
func TestMockEOperationGetOperationID(t *testing.T) {
	o := &MockEOperation{}
	r := 45
	o.On("GetOperationID").Once().Return(r)
	assert.Equal(t, r, o.GetOperationID())

	o.On("GetOperationID").Once().Return(func() int {
		return r
	})
	assert.Equal(t, r, o.GetOperationID())
	o.AssertExpectations(t)
}

// TestMockEOperationSetOperationID tests method SetOperationID
func TestMockEOperationSetOperationID(t *testing.T) {
	o := &MockEOperation{}
	v := 45
	o.On("SetOperationID", v).Once()

	o.SetOperationID(v)
	o.AssertExpectations(t)
}
